#include "clusteralgorithms.fcl"
BEGIN_PROLOG

argoneut_scanfilter:
{
 module_type:      "ScanFilter"
 ScanModuleLabel:  "merge"
 DigitModuleLabel: "source"
 Neutrino_req:     1        #0=no neutrinos, 1=maybe neutrino, 2=neutrino. 
                            #2 is most stringent, 0 is least stringent  
 NumShowers_req:   0        #Maximum number of showers required to pass
 NumTracks_req:    2        #Maximum number of tracks in any plane required to pass  
}

argoneut_emptyfilter:
{
 module_type:      "EmptyFilter"
 HitsModuleLabel:  "ffthit"
 MinHits:          30
 MinIonization:    750.0
}

argoneut_muonfilter:
{
 module_type:        "MuonFilter"
 ClusterModuleLabel: "dbcluster"
 LineModuleLabel:    "linemerger"
 Tolerance:          75.0         
 Delay:              14.0
 DCenter:            26.5
 Cuts:               [22.0, 16.0, 42.5]
 IonFactor:          1.92
 MaxIon:             1000.0
 DeltaWire:          51
}

adcfilter:
{
 module_type:      "ADCFilter"
 DigitModuleLabel: "daq"
 MinADC:           30
}

nufilter:
{ 
 module_type: "NuFilter"
}

evtfilter:
{
 module_type:      "EventFilter"
 BadEvents:        [ 0 ]
 BadRuns:          [ 0 ]
 EventList:        "evt.txt"
 Selection:        0
}

argoneut_finalstateparticlefilter:
{
 module_type:      "FinalStateParticleFilter"
 GenieModuleLabel: "generator"
 PDG:              [3122, -13]   #pdg codes of final state particles in an event that you want to pick 
}

microboone_finalstateselectfilter:
{
 isVerbose: false
 module_type: "FinalStateSelectFilter"
 GenieModuleLabel: "generator" 
        #Return an inclusive final state
 isInclusive: true
        # List of particles to search for
 PDG: [ 13, -13, 11, -11, 2212, 22] #NC 1 photon
        # Will return events with this many of above particles
 PDGCount: [0, 0, 0, 0, 1, 1]
        # Will return events with only the specified number
 PDGCountExclusivity: [true, true, true, true, false, true]
 ######
 # Commentary by Joseph 
 # 
 # This example allows for no charged leptons
 # more than 1 proton and exactly 1 photon
 #
 ######
}

standard_smallclusterfilter:
{
 module_type:			"SmallClusterFilter"
 HitFinderModuleLabel:	"hitfinder"
 MaxTotalHits:			10
 MaxHitsByPlane:		[0]
}


standard_showerselector:
{
 module_type:              "ShowerSelectorFilter"
 ClusterModuleLabel:       "dbcluster"
 ClusterParamsAlg: 	   @local::standard_clusterparamsalg
}


argoneut_smallclusterfilter:		   @local::standard_smallclusterfilter
argoneut_smallclusterfilter.MaxHitsByPlane: [5,5]
argoneut_showerselector:           @local::standard_showerselector
argoneut_showerselector.ClusterParamsAlg:           @local::argoneut_clusterparamsalg


microboone_smallclusterfilter:			 @local::standard_smallclusterfilter
microboone_smallclusterfilter.MaxHitsByPlane: [5,5,5]
microboone_showerselector:           @local::standard_showerselector
microboone_showerselector.ClusterParamsAlg:           @local::microboone_clusterparamsalg

END_PROLOG
